---

name: Destroy PR Deployment

on:
  pull_request:
    types:
      - closed
      - unlabeled

jobs:
  destroy:
    name: "Destroy"
    if: |
      github.event.action == 'closed' ||
      (!contains(github.event.pull_request.labels.*.name, 'deploy to preview'))
    runs-on: ubuntu-latest
    steps:
      - name: Generate deployment name
        id: deployment_name
        uses: ScriptHero/action-spicy-proton-generator@v1
        with:
          name: ${{ github.head_ref }}

      - name: Cancel any running deployment job
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          workflow_id: pull-request-deploy
          access_token: ${{ github.token }}

      - name: Deactivate deployments
        uses: actions/github-script@v4
        env:
          BRANCH_NAME: ${{ github.head_ref }}
          ENVIRONMENT_NAME: preview
        with:
          previews: ant-man
          script: |
            const { BRANCH_NAME, ENVIRONMENT_NAME } = process.env;

            const deployments = await github.paginate(github.repos.listDeployments.endpoint({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: BRANCH_NAME,
              environment: ENVIRONMENT_NAME,
            }));
            const deploymentCount = deployments.length;

            if (deploymentCount < 1) {
              console.log(`found no existing deployments for env ${ENVIRONMENT_NAME}`);
              return;
            }

            const deadState = "inactive";
            console.log(`found ${deploymentCount} existing deployments for ${ENVIRONMENT_NAME} environment, marking each ${deadState}`);

            for (const deployment of deployments) {
              await github.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: deadState,
              });
            }

      - name: TODO Destroy deployed environment (e.g. Azure app/slot)
        run: |
          echo "TODO: something here"
